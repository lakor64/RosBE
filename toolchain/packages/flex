rs_version="2.6.4"
rs_msys=true

declare -A rs_sources=(
	["flex.tar.gz"]="https://github.com/westes/flex/releases/download/v${rs_version}/flex-${rs_version}.tar.gz"
	["flex-msys2.patch"]="https://raw.githubusercontent.com/msys2/MSYS2-packages/master/flex/flex-2.5.38-msys2.patch"
)

declare -A rs_sha256sums=(
	["flex.tar.gz"]="e87aae032bf07c26f85ac0ed3250998c37621d95f8bd748b31f15b33c45ee995"
	["flex-msys2.patch"]="6ffcb831faa9c29c44b717825744887ea5b3945605153831339e0b8a37cbe5c3"
)

rs_prepare() {
	rs_extract_module "flex" "$rs_workdir/flex" "tar.gz"
	cd "$rs_workdir/flex/flex-${rs_version}"
	rs_do_command patch -p1 -i "$rs_sources/flex-msys2.patch"
	rs_do_msys_command ./autogen.sh
}

rs_build() {
	if [ "$MSYSTEM" ] ; then
		autoconf_args="--build=x86_64-pc-msys"
	fi

	rs_do_msys_command "$rs_workdir/flex/flex-${rs_version}/configure" --prefix="$rs_prefixdir" --without-libiconv-prefix --without-libintl-prefix --enable-static --disable-shared --disable-nls $autoconf_args
	rs_do_msys_command $rs_makecmd -j $rs_cpucount
	rs_do_msys_command $rs_makecmd install
}

rs_check() {
    if [ -e "$rs_prefixdir/bin/flex$rs_suffix" ] ; then
        return 1
    fi
    return 0
}

rs_prepare_check() {
	if [ -e "$rs_workdir/flex/flex-${rs_version}" ] ; then
		return 1
	fi
	return 0
}
